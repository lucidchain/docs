"use strict";(self.webpackChunklucid_docs=self.webpackChunklucid_docs||[]).push([[7788],{46162:e=>{e.exports=JSON.parse('{"label":"ITSM","permalink":"/docs/docs/next/tags/itsm","allTagsPath":"/docs/docs/next/tags","count":4,"items":[{"id":"Coming soon/Coming soon","title":"Coming soon","description":"Here we will display future features so you can be up to date with next updates.","permalink":"/docs/docs/next/Coming soon/"},{"id":"Contributing/Data model/Data model","title":"Data model","description":"In this section you are going to learn about how lucid chain manages its data. You will learn about the need of storing data and how Lucid chain does it.","permalink":"/docs/docs/next/Contributing/Data model/"},{"id":"introduction","title":"General Introduction","description":"Let\'s discover what is Lucid Chain Wizard.","permalink":"/docs/docs/next/introduction"},{"id":"Contributing/Lucid Chain backend/Lucid Chain backend","title":"Lucid chain backend","description":"In this section we are going to learn how Lucid chain backend is structured. The first thing you can see when you enter the project, is that there are 2 parts very different from each other. The first one is back. This folder contains all backend logic and the integrations with Redmine and ITop. The other one is front, which contains all the frontend. Here you are about to explore back folder in order to understand its content. This is the most complex part of the application. It has a relatively well distributed system that integrates Redmine and ITop tools with an API in order to make them understand and support SCModel and other features. In the following sections we will describe each part.","permalink":"/docs/docs/next/Contributing/Lucid Chain backend/"}],"unlisted":false}')}}]);